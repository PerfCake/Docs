<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink"
         xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook"
         xml:id="dev.contributor.developing.coding-standards" version="8.0">
   <title>Coding Standards</title>
   <para>This section describes coding standards used for the PerfCake project. The detailed
      guidlines are based on Google Java Coding Standard
      <footnote xml:id="foot-google-code">
         <para>
            <link xlink:href="http://google-styleguide.googlecode.com/svn/trunk/javaguide.html"/>
         </para>
      </footnote>
      with some changes applied. For a brief overview, please make sure to:
   </para>
   <itemizedlist>
      <listitem>
         <para>Develop tests for your features/fixes (keep the high level of test coverage),
         </para>
      </listitem>
      <listitem>
         <para>Use the appropriate code style and formatting (Eclipse configuration file is present
            in the repo),
         </para>
      </listitem>
      <listitem>
         <para>Avoid introducing new FindBugs warnings (see Developers' Guide to find out how to
            generate the site report),
         </para>
      </listitem>
      <listitem>
         <para>Keep backward compatibility unless previously discussed with the developers,</para>
      </listitem>
      <listitem>
         <para>Write/update the JavaDoc comments,</para>
      </listitem>
      <listitem>
         <para>Avoid bad practices
            <footnote>
               <para>
                  <link xlink:href="http://blog.codinghorror.com/new-programming-jargon/"/>
               </para>
            </footnote>
            ,
         </para>
      </listitem>
      <listitem>
         <para>You do not keep unused imports, FIXME comments, unused variables, cryptic code or
            anything ugly,
         </para>
      </listitem>
      <listitem>
         <para>Submit only a masterpiece code that you could be proud of.</para>
      </listitem>
   </itemizedlist>
   <para>Following is the complete definition of PerfCake's coding standards for source code in the
      Javaâ„¢ Programming Language. A Java source file is described as being in PerfCake Style if and
      only if it adheres to the rules herein.
   </para>
   <para>Like other programming style guides, the issues covered span not only aesthetic issues of
      formatting, but other types of conventions or coding standards as well. However, this document
      focuses primarily on the hard-and-fast rules that we follow universally, and avoids giving
      advice that isn't clearly enforceable (whether by human or tool).
   </para>
   <para>In this document, unless otherwise clarified:</para>
   <orderedlist>
      <listitem>
         <para>The term
            <emphasis>class</emphasis>
            is used inclusively to mean an "ordinary" class,
            enum class, interface or annotation type (<code language="java">@interface</code>),
         </para>
      </listitem>
      <listitem>
         <para>The term
            <emphasis>comment</emphasis>
            always refers to implementation comments. We
            do not use the phrase "documentation comments", instead using the common term "Javadoc."
         </para>
      </listitem>
   </orderedlist>
   <para>Example code in this document is non-normative. That is, while the examples are in
      PerfCake Style, they may not illustrate the only stylish way to represent the code. Optional
      formatting choices made in examples should not be enforced as rules.
   </para>
   <para>Previous four paragraphs are copied from the Google Java Coding Standard
      <footnoteref
            linkend="foot-google-code"/>
      as well as the rest of this section.
   </para>
   <xi:include href="./coding-standards/src-basics.xml"/>
   <xi:include href="./coding-standards/src-structure.xml"/>
   <xi:include href="./coding-standards/formating.xml"/>
   <xi:include href="./coding-standards/naming.xml"/>
   <xi:include href="./coding-standards/practices.xml"/>
   <xi:include href="./coding-standards/javadoc.xml"/>
</section>
