<?xml version="1.0" encoding="utf-8"?>
<sect1 xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook" xml:id="ch-ug-migrating.2-to-3">
   <title>From v2.x to v3.x</title>
   <para>
      There are several steps that are needed to migrate scenarios from PerfCake version 2.x to 3.x. The following list shows them:
      <itemizedlist>
         <listitem>
            <simpara>Rename scenario XML schema namespace</simpara>
         </listitem>
         <listitem>
            <simpara>Rename class names</simpara>
         </listitem>
         <listitem>
            <simpara>Replace reporters</simpara>
         </listitem>
         <listitem>
            <simpara>Update RequestResponseJmsSender</simpara>
         </listitem>
      </itemizedlist>
      The following sections take a look at each step in detail.
   </para>
   <sect2 xml:id="ch-ug-mirating.2-to-3.steps">
      <title>Migration steps</title>
      <sect3 xml:id="ch-ug-migrating.2-to-3.steps.xml-namespace">
         <title>Rename XML schema namespace</title>
         <para>
            The namespace of the XML schema for scenarios has been renamed from
            <code>urn:perfcake:scenario:2.0</code>
            to
            <code>urn:perfcake:scenario:3.0</code>
            so it must be updated in the scenario XML files.
         </para>
      </sect3>
      <sect3 xml:id="ch-ug-migrating.2-to-3.steps.class-names">
         <title>Rename class names</title>
         <para>Following classes has been renamed to follow the naming conventions (See Developers' Guide).</para>
         <table frame="all">
            <title>Renamed classes in PerfCake v3.x</title>
            <tgroup cols="2" align="left" colsep="1" rowsep="1">
               <colspec colname="v2.x" colwidth="1*"/>
               <colspec colname="v3.x" colwidth="1*"/>
               <thead>
                  <row>
                     <entry>Class name in version 2.x</entry>
                     <entry>Class name in version 3.x</entry>
                  </row>
               </thead>
               <tbody>
                  <row>
                     <entry>HTTPSender</entry>
                     <entry>HttpSender</entry>
                  </row>
                  <row>
                     <entry>HTTPSSender</entry>
                     <entry>HttpsSender</entry>
                  </row>
                  <row>
                     <entry>JDBCSender</entry>
                     <entry>JdbcSender</entry>
                  </row>
                  <row>
                     <entry>JMSSender</entry>
                     <entry>JmsSender</entry>
                  </row>
                  <row>
                     <entry>RequestResponseJMSSender</entry>
                     <entry>RequestResponseJmsSender</entry>
                  </row>
                  <row>
                     <entry>SOAPSocketSender</entry>
                     <entry>SoapSocketSender</entry>
                  </row>
                  <row>
                     <entry>SSLSocketSender</entry>
                     <entry>SslSocketSender</entry>
                  </row>
                  <row>
                     <entry>CSVDestination</entry>
                     <entry>CsvDestination</entry>
                  </row>
                  <row>
                     <entry>TextMessageValidator</entry>
                     <entry>RegExpValidator</entry>
                  </row>
                  <row>
                     <entry>RulesMessageValidator</entry>
                     <entry>RulesValidator</entry>
                  </row>
               </tbody>
            </tgroup>
         </table>
      </sect3>
      <sect3 xml:id="ch-ug-migrating.2-to-3.steps.reporters">
         <title>Replace reporters</title>
         <para>
            As it has been mentioned in
            <xref linkend="ch-ug-reporting.reporters.removed-reporters"/>
            there are several reporters that has been removed from PerfCake and has been replaced by others.
            The following sections illustrate that change and how to perform the migration at the same time.
         </para>
         <simplesect>
            <title>AverageThroughputReporter -> ThroughputStatsReporter</title>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="AverageThroughputReporter">
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
            <para>is replaced by</para>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ThroughputStatsReporter">
   <property name="minimumEnabled" value="false"/>
   <property name="maximumEnabled" value="false"/>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
         </simplesect>
         <simplesect>
            <title>ResponseTimeReporter -> ResponseTimeStatsReporter</title>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ResponseTimeReporter">
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
            <para>is replaced by</para>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ResponseTimeStatsReporter">
   <property name="minimumEnabled" value="false"/>
   <property name="maximumEnabled" value="false"/>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
         </simplesect>
         <simplesect>
            <title>WindowResponseTimeReporter -> ResponseTimeStatsReporter</title>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="WindowResponseTimeReporter">
   <property name="windowSize" value="10"/>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
            <para>is replaced by</para>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ResponseTimeStatsReporter">
   <property name="windowSize" value="10"/>
   <property name="minimumEnabled" value="false"/>
   <property name="maximumEnabled" value="false"/>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
         </simplesect>
      </sect3>
      <sect3 xml:id="ch-ug-migrating.2-to-3.steps.RequestResponseJmsSender">
         <title>Update RequestResponseJmsSender</title>
         <para>
            The
            <code>RequestResponseJmsSender</code>
            newly introduces the possibility to specify different
            connection properties for request and response. But it changes the default behavior.
            To ensure the original behavior is kept, the security properties for the response has to be added to keep request and
            response credentials the same.
         </para>
         <simplesect>
            <title>RequestResponseJMSSender -> RequestResponseJmsSender</title>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <sender class="RequestResponseJMSSender">
   ...
   <property name="connectionFactory"
             value="${jms.connection.factory"/>
   
   <property name="username" value="${username}"/>
   <property name="password" value="${password}"/>
   <!-- JNDI -->
   <property name="jndiContextFactory"
             value="${jndi.ctx.factory}"/>
   
   <property name="jndiUrl" value="${jndi.url}"/>
   
   <property name="jndiSecurityPrincipal"
             value="${jndi.username}"/>
   
   <property name="jndiSecurityCredentials"
             value="${jndi.password}"/>
   ...
 </sender>]]></programlisting>
            <para>is replaced by</para>
            <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <sender class="RequestResponseJmsSender">
   ...
   <property name="connectionFactory"
             value="${jms.connection.factory}"/>
   
   <property name="username" value="${username}"/>
   <property name="password" value="${password}"/>
   <property name="responseUsername" value="${username}"/>
   <property name="responsePassword" value="${password}"/>
   <!-- JNDI -->
   <property name="jndiContextFactory"
             value="${jndi.ctx.factory}"/>
   
   <property name="jndiUrl" value="${jndi.url}"/>
   
   <property name="jndiSecurityPrincipal"
             value="${jndi.username}"/>
   
   <property name="jndiSecurityCredentials"
             value="${jndi.password}"/>
   
   <property name="responseJndiSecurityPrincipal"
             value="${jndi.username}"/>
   
   <property name="responseJndiSecurityCredentials"
             value="${jndi.password}"/>
   ...
 </sender>]]></programlisting>
         </simplesect>
      </sect3>
   </sect2>
   <sect2 xml:id="ch-ug-migrating.2-to-3.xslt">
      <title>Scenario conversion using XSLT</title>
      <para>
         After understanding the all the steps needed to migrate PerfCake scenarios
         from version 2.x to version 3.x we can take a look at an option to make the migration automatically
         using XSL transformation
         <footnote>
            <simpara>
               <link xlink:href="http://www.w3.org/TR/xslt"/>
            </simpara>
         </footnote>
         .
         The particular XSLT is available as a part of the PerfCake distribution and it can be found at
         <code>$PERFCAKE_HOME/resources/xslt/scenario-2.0-to-3.0.xsl</code>
         .
      </para>
   </sect2>
</sect1>
