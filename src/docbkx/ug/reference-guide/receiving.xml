<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook" xml:id="ug.reference-guide.receiving" version="7.0">
   <title>Receiving messages</title>
   <para>A <code>Receiver</code> is a component used to receive responses from a separate message
      channel. It is though possible to send requests to some protocol and use a completely
      different protocol to receive responses.</para>
   <para>The <code>Receiver</code> always needs to know how
      many threads it should use to receive responses and from where it should read them. So there
      is a mandatory attribute <code>threads</code>, and two mandatory tags <code>source</code> and
      <code>correlator</code>. For <emphasis>Correlators</emphasis> see <xref linkend="ug.reference-guide.correlating"/>.</para>
   <para>Some <emphasis>Senders</emphasis> allow generating requests without specifying a message in
      the scenario. However, this does not work with <emphasis>Receivers</emphasis> and
         <emphasis>Correlators</emphasis>. There always needs to be a message specified (be it a
      message with an empty body) for the <emphasis>Correlator</emphasis> to be able to compute (and
      possibly store) the correlation ID. PerfCake insists on user specifying the message for them
      to realize the configuration is different (in other words, PerfCake does not perform any magic
      hidden operations on your configuration).</para>
   <example>
      <title>An example of a Receiver configuration</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[   <receiver class="..." threads="...">
      <correlator class="..." />
      <source>...</source>
      ...
      receiver properties
      ...
   </receiver>]]></programlisting>
      <para>When specifying the receiver class, unless you enter a fully classified class name, the
         default package <code>org.perfcake.message.receiver</code> is assumed.</para>
      <para>In the following sections you can find a complete description of all
            <emphasis>Receivers</emphasis> that can be used by PerfCake including all of their
         properties. </para>
   </example>
   <xi:include href="./receiving/HttpReceiver.xml"/>
</section>
