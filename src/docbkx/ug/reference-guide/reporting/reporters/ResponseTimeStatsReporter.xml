<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook" xml:id="ug.reference-guide.reporting.reporters.ResponseTimeStatsReporter" version="7.0">
   <title>ResponseTimeStatsReporter</title>
   <para>The reporter is able to report the statistics - current, minimal, maximal and average value
      of a response time (in miliseconds) from the beginning of the measuring to the moment when the
      results are published (default) or in a specified window. The default result of this reporter
      is the current response time.
   </para>
   <table frame="all">
      <title>ResponseTimeStatsReporter properties</title>
      <tgroup cols="4" align="left" colsep="1" rowsep="1">
         <colspec colname="property-name" colwidth="2*"/>
         <colspec colname="description" colwidth="2*"/>
         <colspec colname="required" colwidth="1*"/>
         <colspec colname="default-value" colwidth="2*"/>
         <thead>
            <row>
               <entry>Property name</entry>
               <entry>Description</entry>
               <entry>Required</entry>
               <entry>Default value</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>minimumEnabled</entry>
               <entry>Enables minimal value measuring.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>maximumEnabled</entry>
               <entry>Enables maximal value measuring.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>averageEnabled</entry>
               <entry>Enables average value measuring.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>requestSizeEnabled</entry>
               <entry>Enables measuring of total size of requests sent.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>responseSizeEnabled</entry>
               <entry>Enables measuring of total size of responses received.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>windowSize</entry>
               <entry>A window where the data for the statistics are taken from. The value unit depends on the window type specified by the
                  <code>windowType</code>
                  property.
               </entry>
               <entry>No</entry>
               <entry>Integer.MAX_VALUE</entry>
            </row>
            <row>
               <entry>windowType</entry>
               <entry>A type of the window. It is either number of last iterations of an amount of time in milliseconds. The values of
                  <code>iteration</code>
                  or
                  <code>time</code>
                  is supported.
               </entry>
               <entry>No</entry>
               <entry>Integer.MAX_VALUE</entry>
            </row>
            <row>
               <entry>histogram</entry>
               <entry>A comma separated list of values where the histogram is split to individual ranges.</entry>
               <entry>No</entry>
               <entry/>
            </row>
            <row>
               <entry>histogramPrefix</entry>
               <entry>String prefix used in the result map for histogram entries. This prefix is followed by the mathematical representation of the particular range.</entry>
               <entry>No</entry>
               <entry>in</entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <para>The following table describes result names of ResponseTimeStatsReporter:</para>
   <table frame="all">
      <title>ResponseTimeStatsReporter result names</title>
      <tgroup cols="2" align="left" colsep="1" rowsep="1">
         <colspec colname="result-name" colwidth="1*"/>
         <colspec colname="description" colwidth="3*"/>
         <thead>
            <row>
               <entry>Result name</entry>
               <entry>Description</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>Result</entry>
               <entry>The current response time in ms - of the latest iteration.</entry>
            </row>
            <row>
               <entry>Minimum</entry>
               <entry>The minimal response time in ms measured so far (in a given sliding
                  window).
               </entry>
            </row>
            <row>
               <entry>Maximum</entry>
               <entry>The minimal response time in ms measured so far (in a given sliding
                  window).
               </entry>
            </row>
            <row>
               <entry>Average</entry>
               <entry>The average response time in ms measured so far (in a given sliding
                  window).
               </entry>
            </row>
            <row>
               <entry>RequestSize</entry>
               <entry>The size of all requests sent so far (in a given sliding window).</entry>
            </row>
            <row>
               <entry>ResponseSize</entry>
               <entry>The size of all responses received so far (in a given sliding window).</entry>
            </row>
            <row>
               <entry><code>${histogramPrefix}</code>&lt;<code>from</code>:<code>to</code>)
               </entry>
               <entry>If
                  <code>histogram</code>
                  is used, there is a result with the value of histogram for each range. Example:
                  <code>in&lt;100.0:200.0)</code>
                  for a value range between 100.0 and 200.0 and the
                  <code>histogramPrefix</code>
                  set to "<code>in</code>".
               </entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <example>
      <title>An example of ResponseTimeStatsReporter configuration</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ResponseTimeStatsReporter">
   <property name="minimumEnabled" value="false"/>
   <property name="maximumEnabled" value="false"/>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
   </example>
   <example>
      <title>An example of ResponseTimeStatsReporter configuration with histogram</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[   <reporter class="ResponseTimeStatsReporter">
      <property name="histogram" value="100,200"/>
      <property name="histogramPrefix" value="in"/>

      <destination class="ConsoleDestination">
         <period type="time" value="5000" />
      </destination>
      ...
      (destinations)
      ...
   </reporter>]]></programlisting>

      <para>In the example above a
         <code>ResponseTimeStatsReporter</code>
         is configured to report
         all statistics with the following output:
      </para>
      <programlisting><![CDATA[2016-06-13 23:20:22,158 INFO  {org.perfcake.ScenarioExecution} === Welcome to PerfCake 7.0 ===
2016-06-13 23:20:22,159 INFO  {org.perfcake.util.TimerBenchmark} Benchmarking system timer resolution...
2016-06-13 23:20:22,160 INFO  {org.perfcake.util.TimerBenchmark} This system is able to differentiate up to 356ns. A single thread is now able to measure maximum of 2808988 iterations/second.
2016-06-13 23:20:22,177 INFO  {org.perfcake.message.generator.DefaultMessageGenerator} Starting to generate...
[0:00:00][1 iterations][0%] [1.084454 ms] [warmUp => false] [Threads => 10] [ResponseSize => 256.00 B] [Minimum => 1.084454 ms] [Maximum => 1.084454 ms] [failures => 0] [RequestSize => 256.00 B] [Average => 1.084454 ms]
2016-06-13 23:20:22,201 INFO  {org.perfcake.message.generator.DefaultMessageGenerator} Reached test end. All messages were prepared to be sent.
2016-06-13 23:20:22,201 INFO  {org.perfcake.message.generator.DefaultMessageGenerator} Waiting for all messages to be sent...
[0:00:00][100 iterations][10%] [1.059404 ms] [warmUp => false] [Threads => 10] [ResponseSize => 25.00 KiB] [Minimum => 1.009627 ms] [Maximum => 2.501367 ms] [failures => 0] [RequestSize => 25.00 KiB] [Average => 1.11484413 ms]
[0:00:00][200 iterations][20%] [1.057651 ms] [warmUp => false] [Threads => 10] [ResponseSize => 50.00 KiB] [Minimum => 1.008045 ms] [Maximum => 3.143239 ms] [failures => 0] [RequestSize => 50.00 KiB] [Average => 1.1479294649999998 ms]
[0:00:00][300 iterations][30%] [1.06057 ms] [warmUp => false] [Threads => 10] [ResponseSize => 75.00 KiB] [Minimum => 1.008045 ms] [Maximum => 3.143239 ms] [failures => 0] [RequestSize => 75.00 KiB] [Average => 1.12146921 ms]
[0:00:00][400 iterations][40%] [1.063183 ms] [warmUp => false] [Threads => 10] [ResponseSize => 100.00 KiB] [Minimum => 1.008045 ms] [Maximum => 3.143239 ms] [failures => 0] [RequestSize => 100.00 KiB] [Average => 1.1061472125 ms]
[0:00:00][500 iterations][50%] [1.114687 ms] [warmUp => false] [Threads => 10] [ResponseSize => 125.00 KiB] [Minimum => 1.008045 ms] [Maximum => 3.143239 ms] [failures => 0] [RequestSize => 125.00 KiB] [Average => 1.1018137200000009 ms]
[0:00:00][600 iterations][60%] [1.031199 ms] [warmUp => false] [Threads => 10] [ResponseSize => 150.00 KiB] [Minimum => 1.008045 ms] [Maximum => 3.988934 ms] [failures => 0] [RequestSize => 150.00 KiB] [Average => 1.1051423050000004 ms]
[0:00:00][700 iterations][70%] [1.272101 ms] [warmUp => false] [Threads => 10] [ResponseSize => 175.00 KiB] [Minimum => 1.008045 ms] [Maximum => 3.988934 ms] [failures => 0] [RequestSize => 175.00 KiB] [Average => 1.1001457528571437 ms]
[0:00:00][800 iterations][80%] [1.059498 ms] [warmUp => false] [Threads => 10] [ResponseSize => 200.00 KiB] [Minimum => 1.007744 ms] [Maximum => 3.988934 ms] [failures => 0] [RequestSize => 200.00 KiB] [Average => 1.0959077025000006 ms]
[0:00:00][900 iterations][90%] [1.079325 ms] [warmUp => false] [Threads => 10] [ResponseSize => 225.00 KiB] [Minimum => 1.007744 ms] [Maximum => 6.986077 ms] [failures => 0] [RequestSize => 225.00 KiB] [Average => 1.1047625722222227 ms]
[0:00:00][1000 iterations][100%] [1.05882 ms] [warmUp => false] [Threads => 10] [ResponseSize => 250.00 KiB] [Minimum => 1.007744 ms] [Maximum => 6.986077 ms] [failures => 0] [RequestSize => 250.00 KiB] [Average => 1.104236193000001 ms]
2016-06-13 23:20:23,310 INFO  {org.perfcake.reporting.ReportManager} Checking whether there are more results to be reported...
2016-06-13 23:20:23,313 INFO  {org.perfcake.ScenarioExecution} === Goodbye! ===]]></programlisting>
   </example>
</section>
