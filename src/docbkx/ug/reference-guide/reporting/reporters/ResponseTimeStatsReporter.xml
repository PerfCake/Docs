<?xml version="1.0" encoding="utf-8"?>
<section xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook" xml:id="ug.reference-guide.reporting.reporters.ResponseTimeStatsReporter" version="7.0">
   <title>ResponseTimeStatsReporter</title>
   <para>
      The reporter is able to report the statistics - current, minimal, maximal and average value of a response time (in miliseconds) from the beginning of the measuring to the moment when the results are published (default) or in a specified window.
      The default result of this reporter is the current response time.
   </para>
   <table frame="all">
      <title>ResponseTimeStatsReporter properties</title>
      <tgroup cols="4" align="left" colsep="1" rowsep="1">
         <colspec colname="property-name" colwidth="2*"/>
         <colspec colname="description" colwidth="2*"/>
         <colspec colname="required" colwidth="1*"/>
         <colspec colname="default-value" colwidth="2*"/>
         <thead>
            <row>
               <entry>Property name</entry>
               <entry>Description</entry>
               <entry>Required</entry>
               <entry>Default value</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>minimumEnabled</entry>
               <entry>Enables minimal value measuring.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>maximumEnabled</entry>
               <entry>Enables maximal value measuring.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>averageEnabled</entry>
               <entry>Enables average value measuring.</entry>
               <entry>No</entry>
               <entry>true</entry>
            </row>
            <row>
               <entry>windowSize</entry>
               <entry>A window where the data for the statistics are taken from.</entry>
               <entry>No</entry>
               <entry>Integer.MAX_VALUE</entry>
            </row>
            <row>
               <entry>histogram</entry>
               <entry>A comma separated list of values where the histogram is split to individual ranges.</entry>
               <entry>No</entry>
               <entry>""</entry>
            </row>
            <row>
               <entry>histogramPrefix</entry>
               <entry>String prefix used in the result map for histogram entries. This prefix is followed by the mathematical representation of the particular range.</entry>
               <entry>No</entry>
               <entry>"in"</entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <para>The following table describes result names of ResponseTimeStatsReporter:</para>
   <table frame="all">
      <title>ResponseTimeStatsReporter result names</title>
      <tgroup cols="2" align="left" colsep="1" rowsep="1">
         <colspec colname="result-name" colwidth="1*"/>
         <colspec colname="description" colwidth="3*"/>
         <thead>
            <row>
               <entry>Result name</entry>
               <entry>Description</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>Result</entry>
               <entry>The current response time in ms - of the latest iteration.</entry>
            </row>
            <row>
               <entry>Minimum</entry>
               <entry>The minimal response time in ms measured so far (in a given time window).</entry>
            </row>
            <row>
               <entry>Maximum</entry>
               <entry>The minimal response time in ms measured so far (in a given time window).</entry>
            </row>
            <row>
               <entry>Average</entry>
               <entry>The average response time in ms measured so far (in a given time window).</entry>
            </row>
            <row>
               <entry><code>${histogramPrefix}</code>&lt;<code>from</code>:<code>to</code>)
               </entry>
               <entry>If
                  <code>histogram</code>
                  is used, there is a result with the value of histogram for each range. Example:
                  <code>in&lt;100.0:200.0)</code>
                  for a value range between 100.0 and 200.0 and the <code>histogramPrefix</code> set to "<code>in</code>".
               </entry>
            </row>
         </tbody>
      </tgroup>
   </table>
   <section>
      <title>An example of ResponseTimeStatsReporter configuration</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ResponseTimeStatsReporter">
   <property name="minimumEnabled" value="false"/>
   <property name="maximumEnabled" value="false"/>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>
   </section>
   <section>
      <title>An example of ResponseTimeStatsReporter configuration with histogram</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[ <reporter class="ResponseTimeStatsReporter">
   <property name="histogram" value="100,200"/>
   <property name="histogramPrefix" value="in"/>

   <destination class="ConsoleDestination">
      <period type="time" value="5000" />
   </destination>
   ...
   (destinations)
   ...
 </reporter>]]></programlisting>

      <para>
         In the example above a
         <code>ResponseTimeStatsReporter</code>
         is configured to report all statistics including a histogram
         of response time values in value ranges of (-infinity:100 ms), &lt;100 ms:200 ms) and &lt;200 ms: +infinity) with the following output:
      </para>
      <programlisting><![CDATA[
2016-01-04 08:29:56,929 INFO  {org.perfcake.ScenarioExecution} === Welcome to PerfCake 6.0 ===
2016-01-04 08:29:56,929 INFO  {org.perfcake.util.TimerBenchmark} Benchmarking system timer resolution...
2016-01-04 08:29:56,930 INFO  {org.perfcake.util.TimerBenchmark} This system is able to differentiate up to 298ns. A single thread is now able to measure maximum of 3355704 iterations/second.
2016-01-04 08:29:56,993 INFO  {org.perfcake.message.generator.DefaultMessageGenerator} Starting to generate...
[0:00:05][2779 iterations][17%] [177.692582 ms] [warmUp => false] [Threads => 100] [Minimum => 116.011933 ms] [Maximum => 747.613035 ms] [Average => 177.29360404128917 ms] [in<-Infinity:100.0) => 0.0] [in<100.0:200.0) => 86.16443317638537] [in<200.0:Infinity) => 13.83556682361463]
[0:00:10][5309 iterations][33%] [186.415253 ms] [warmUp => false] [Threads => 100] [Minimum => 116.011933 ms] [Maximum => 747.613035 ms] [Average => 186.80996315243672 ms] [in<-Infinity:100.0) => 0.0] [in<100.0:200.0) => 77.27616169248206] [in<200.0:Infinity) => 22.723838307517948]
[0:00:15][8610 iterations][50%] [139.919484 ms] [warmUp => false] [Threads => 100] [Minimum => 116.011933 ms] [Maximum => 833.91631 ms] [Average => 173.14773112743953 ms] [in<-Infinity:100.0) => 0.0] [in<100.0:200.0) => 85.68773234200744] [in<200.0:Infinity) => 14.312267657992564]
[0:00:20][11474 iterations][67%] [264.992354 ms] [warmUp => false] [Threads => 100] [Minimum => 116.011933 ms] [Maximum => 833.91631 ms] [Average => 173.6120836123002 ms] [in<-Infinity:100.0) => 0.0] [in<100.0:200.0) => 83.33187734777671] [in<200.0:Infinity) => 16.668122652223293]
[0:00:25][14332 iterations][83%] [202.32752 ms] [warmUp => false] [Threads => 100] [Minimum => 116.011933 ms] [Maximum => 926.555949 ms] [Average => 173.6215303888613 ms] [in<-Infinity:100.0) => 0.0] [in<100.0:200.0) => 82.49703398701934] [in<200.0:Infinity) => 17.50296601298067]
2016-01-04 08:30:26,999 INFO  {org.perfcake.message.generator.DefaultMessageGenerator} Reached test end.
2016-01-04 08:30:26,999 INFO  {org.perfcake.reporting.ReportManager} Checking whether there are more results to be reported...
[0:00:30][17533 iterations][100%] [180.395991 ms] [warmUp => false] [Threads => 100] [Minimum => 116.011933 ms] [Maximum => 926.555949 ms] [Average => 170.52201248824593 ms] [in<-Infinity:100.0) => 0.0] [in<100.0:200.0) => 84.95378295104416] [in<200.0:Infinity) => 15.046217048955837]
2016-01-04 08:30:27,000 INFO  {org.perfcake.message.generator.DefaultMessageGenerator} Shutting down execution...
2016-01-04 08:30:27,416 INFO  {org.perfcake.ScenarioExecution} === Goodbye! ===
]]></programlisting>
   </section>
</section>
