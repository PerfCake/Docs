<?xml version="1.0" encoding="utf-8"?>
<sect2 xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook" xml:id="ug.perfcake-features.scenario-definition.filtering-properties" version="5.0">
   <title>Filtering properties</title>
   <para>It is possible to use property placeholders in scenarios (and in messages too, see later).
      The placeholders are replaced by the actual value of the particular property or by the default value if specified in a process
      called property filtering.
   </para>
   <para>
      The properties are loaded from system properties and environment properties (in this order). To limit just to one of these sources,
      one can specify a namespace prefix
      <emphasis role="italic">env.</emphasis>
      for environment properties and
      <emphasis role="italic">props.</emphasis>
      for system properties.
   </para>
   <para>A placeholder has the following format:</para>
   <programlisting><![CDATA['${' + <property name> + (':' + <default value>) + '}']]></programlisting>
   <simplesect>
      <title>An example of a scenario with a property placeholder without the default value:</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:${perfcake.scenario.version}">
   ...
</scenario>]]></programlisting>
   </simplesect>
   <simplesect>
      <title>An example of a scenario with a property placeholder with the default value of "5.0":</title>
      <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<scenario xmlns="urn:perfcake:scenario:${perfcake.version:5.0}">
   ...
</scenario>]]></programlisting>
   </simplesect>
   <para>
      The property filtering process is performed in a moment, when a scenario file is loaded
      by PerfCake, before it is parsed. There are no advanced features, just a simmple string replacement for scenario files.
   </para>
   <para>
      The filtering tries to find the property by name. If the property is found, the whole placeholder is replaced by property's actual value.
      If the specified property does not exist, it looks for the default value if it is specified. If so the whole placeholder is replaced by the default value.
      Otherwise it leaves the placeholder in place intact.
   </para>
   <para>
      To provide PerfCake the actual value of the property you can just pass it using an ordinary way:
      <programlisting><![CDATA[-D<property.name>=<property.value>]]></programlisting>
   </para>
   <para>
      Another way is to configure an environment property in the operating system. In case the same property exists both as a system property and as an environment
      property, the system property takes precedence.
   </para>
   <para>There are several properties that exist in PerfCake and that might be usefull in the scenarios
      or messages (e.g. a timestamp of the scenario execution start). The following table describes all available
      internal properties.
   </para>
   <table frame="all" xml:id="ug.perfcake-features.scenario-definition.filtering-properties.available-properties-table">
      <title>Available PerfCake internal properties</title>
      <tgroup cols="2" align="left" colsep="1" rowsep="1">
         <colspec colname="property-name" colwidth="1*"/>
         <colspec colname="description" colwidth="2*"/>
         <thead>
            <row>
               <entry>Property name</entry>
               <entry>Description</entry>
            </row>
         </thead>
         <tbody>
            <row>
               <entry>perfcake.encoding</entry>
               <entry>Default encoding</entry>
            </row>
            <row>
               <entry>perfcake.messages.dir</entry>
               <entry>Messages directory</entry>
            </row>
            <row>
               <entry>perfcake.plugins.dir</entry>
               <entry>Plugins directory</entry>
            </row>
            <row>
               <entry>perfcake.properties.file</entry>
               <entry>Custom properties file</entry>
            </row>
            <row>
               <entry>perfcake.run.timestamp</entry>
               <entry>A timestamp of a moment when the scenario execution started</entry>
            </row>
            <row>
               <entry>perfcake.scenario</entry>
               <entry>A name of the scenario</entry>
            </row>
            <row>
               <entry>perfcake.scenarios.dir</entry>
               <entry>Scenarios directory</entry>
            </row>
         </tbody>
      </tgroup>
   </table>
</sect2>
