<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:db="http://docbook.org/ns/docbook" xml:id="ch-ug-extending" status="draft" version="5.0">
   <title>Extending PerfCake</title>
   <para>PerfCake has the extension mechanism, that allows user to add specific client libraries or a new functionality. The following sections describes those possibilities.</para>
   <sect1 xml:id="ch-ug-extending.client-libraries">
      <title>Client libraries</title>
      <para>
         Some of the PerfCake's components need additional stuff to work properly. For example:
         <itemizedlist>
            <listitem>JMS based senders need JMS provider's specific client jar files,</listitem>
            <listitem>JDBC based sender needs database specific JDBC driver.</listitem>
         </itemizedlist>
      </para>
      <para>
         To add the necessary client libraries and the dependencies, place it all under the
         <code>$PERFCAKE_HOME/lib/ext</code>
         directory.
      </para>
   </sect1>
   <sect1 xml:id="ch-ug-extending.custom-components">
      <title>Custom components - Plugins</title>
      <para>
         PerfCake has the ability to extend its functionality by adding plugins - new custom components such as senders, generators, reporters, destinations or validators.
         <footnote>
            <para>To get the details about creating custom components (plugins), see the PerfCake Developers' Guide.</para>
         </footnote>
         .
      </para>
      <para>
         If you want to add a new component to be used by PerfCake, all you need to do is to take the jar file,
         where the component is packaged (along with the jar files on which the component depends on),
         and place it all under the
         <code>$PERFCAKE_HOME/lib/plugins</code>
         directory.
      </para>
   </sect1>
</chapter>
