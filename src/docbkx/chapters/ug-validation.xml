<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="ch-ug-validation" status="draft">
   <title>Validation</title>
   <simplesect>
      <para>Validation can be used to check if the response received by a sender is
         valid. It is optional and if it is used, it is performed in a gentle way
         (only once in a 0.5 sec) not to add any significant overhead and not
         to affect the measuring.
      </para>
      <para>
         The validation is configured in a scenario in two places. First there is a kind of validator
         pool where all validators available in the scenario are placed. The validator pool is configured
         in the
         <code>validation</code>
         section of the scenario. Each validator has a unique ID by which it
         can be referenced. Once at least one of the validators is configured, it can be referenced by
         a
         <code>message</code>
         's sub-element
         <code>validatorRef</code>
         , which is the second place the validation
         is configured. By adding a validator refecence to the messages we tell PerfCake that the response
         to that particular messages should be validated by that particular validator. Any message can
         have multiple validator references and each validator must be passed in order to
         set the response valid. Any validator can be referenced from more
         than one message.
      </para>
      <simplesect>
         <title>An example of validation configuration:</title>
         <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[...
<messages>
   ...
   <message uri="...">
      <validatorRef id="validator1"/>
      ...
   </message>
   <message uri="...">
      <validatorRef id="validator1"/>
      <validatorRef id="validator2"/>
      ...
   </message>
   ...
</messages>
      ...
<validation>
   <validator id="validator1" class="..."> 
      ...
   </validator>
   <validator id="validator2" class="..."> 
      ...
   </validator>
</validation>
...]]></programlisting>
         <para>
            In the example above there are two validators (
            <code>validator1</code>
            and
            <code>validator2</code>
            ) and two messages configured. The first message has just the
            <code>validator1</code>
            attached so the response message received to
            the first message will be validated just by the
            <code>validator1</code>
            . On the other hand there is a second
            message that has both validators attached. So the response to the second message will be validated
            by both of the validators.
         </para>
      </simplesect>
      <para>The rest of the chapter will present all the available validators that can be used in PerfCake.</para>
   </simplesect>
   <sect1>
      <title>Validators</title>
      <xi:include href="../sections/ug-TextMessageValidator.xml"/>
      <xi:include href="../sections/ug-RulesMessageValidator.xml"/>
   </sect1>
</chapter>
