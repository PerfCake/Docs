<?xml version="1.0" encoding="utf-8"?>
<chapter xmlns="http://docbook.org/ns/docbook" xml:id="ch-reporting" status="draft">
   <title>Reporting</title>
   <sect1>
      <title>Overview</title>
      <para>Reporting is a module that provides a reporting abilities.
It is configured using &lt;reporting&gt; element in the scenario
definition.</para>
      <para>The configuration consists of following steps:</para>
      <itemizedlist>
         <listitem>
            <para>Configure Reporter class</para>
         </listitem>
         <listitem>
            <para>Configure Reporter's destinations</para>
         </listitem>
         <listitem>
            <para>Set common uniqueId and tags</para>
         </listitem>
      </itemizedlist>
      <para>The reporter class represents a different types of the
reports such as average throughput or memory usage. By configuring the
destinations you tell where output should be directed by the reporter
(e.g. console, CSV file, etc.). </para>
      <simplesect>
         <title>Example reporting configuration:</title>
         <programlisting language="xml" linenumbering="numbered" startinglinenumber="1"><![CDATA[<reporting>
   <property name="tags" value=""/>
   <property name="uniqueId" value="http_gw"/>

   <reporter class="ATReporter">
      <property name="label_type" value="iteration"/>
      <destination class="ConsoleDestination"/>
      <destination class="CsvDestination">
         <property name="outputPath" value="./logs"/>
      </destination>
   </reporter>

   <reporter class="KPIReporter">
      <property name="label_type" value="time"/>
      <destination class="ConsoleDestination">
         <property name="periodicity" value="2s"/>
      </destination>
   </reporter>
</reporting>]]></programlisting>
      </simplesect>
      <para>
With this configuration the 2 reporters are specified. Average
throughput reporter
<varname>ATReporter</varname>
and
<varname>KPIReporter</varname>
. First one will report to console after the test finishes and to
<varname>CsvDestination</varname>
into current folder, the reporting will be done with iteration label.
The KPIReporter will periodically every 2 seconds report into console
the current Key Performance Indicaters of the server with time label.
That means that each measuremnet in console will be reported with passed
iterations label.
</para>
   </sect1>
   <sect1>
      <title>Adding new Destination</title>
      <para>
To add new destination extend
<varname>org.perfcake.reporting.destinations.Destination</varname>
class. Take a look into existing implementations which will give you an
idea how to implement it.
</para>
   </sect1>
   <sect1>
      <title>How to use</title>
      <para>To use reporters in PerfCake test the test has to have
{@link org.jboss.soa.esb.qa.perfcake.reporting.ReportManager}
accessible. You can call .report* methods to report various events. It
should be safe to call those events (provided ReporterManager is not
null :-) ) and implementors should bear in mind that programmer may not
specify the reporter in scenario xml file even though it is being called
in the test.</para>
   </sect1>
</chapter>
